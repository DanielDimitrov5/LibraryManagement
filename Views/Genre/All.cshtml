@using LibraryManagement.Data.Models
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.TagHelpers

@model IEnumerable<LibraryManagement.Data.Models.Genre>

@inject SignInManager<User> SignInManager;
@inject UserManager<User> UserManager;

@{
    ViewData["Title"] = "Genre Page";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Genres List</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            padding: 20px;
            background-color: #f7f7f7;
        }
        h1 {
            text-align: center;
        }
        .genres-container {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            gap: 20px;
            margin-top: 30px;
        }
        .genre-card {
            background-color: white;
            padding: 20px;
            width: 200px;
            border-radius: 8px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
            text-align: center;
            transition: transform 0.2s ease;
        }
        .genre-card:hover {
            transform: translateY(-5px);
        }
    </style>
</head>
<body>

<h1>Genres</h1>

<div class="genres-container">


    @if (User.IsInRole("Admin"))
    {
        <a class="btn btn-lg btn-primary" asp-action="Create">Add genre</a>
    }
    
    <div class="genres-container">
        
        @foreach (var genre in @Model)
        {
            @if (User.IsInRole("Admin"))
            {
                <div onclick="window.location.href='@Url.Action("Edit", "Genre", new { id = @genre.Id })';" class="genre-card">@genre.Name</div>
            }
            else
            {
                <div class="genre-card">@genre.Name</div>
            }
        }
    </div>

</div>
    

</body>
</html>
